{"version":3,"sources":["module.js","routes.js","globalController.js","authController.js","mainController.js","appointmentsController.js","appointmentDetailsController.js","medicationsController.js","sensorsController.js","patientController.js","appoiment_userController.js","religionController.js","doctorsController.js","unapproveddoctorsController.js","update_patientController.js","update_doctorController.js","update_supervisorController.js","solicitudappointmentsController.js","personalDataController.js","services.js","dialogs.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxnhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzxlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbttpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["angular.module('Platease', [\n    'ui.bootstrap',\n    'ui.router',\n    'ngCookies',\n    'chart.js',\n    'angularMoment',\n    'textAngular',\n    'angular-loading-bar',\n    'truncate',\n    'ng-bs3-datepicker',\n    'angular-jwt',\n    'satellizer',\n    'angular-storage'\n]);\n\nangular.module('Platease').constant('angularMomentConfig', {\n    preprocess: 'utc', // optional\n    timezone: 'UTC' // optional\n})\n    .constant('BASE_URL', '/')\n    .constant('ROLES', {\n        supervisor: 'supervisor',\n        patient: 'patient',\n        doctor: 'doctor'\n    })\n    .config(['$httpProvider', 'jwtInterceptorProvider', '$authProvider', '$locationProvider', function ($httpProvider, jwtInterceptorProvider, $authProvider, $locationProvider) {\n\n        $authProvider.baseUrl = '/';\n        $authProvider.loginUrl = 'api/authenticate';\n\n        // jwtInterceptorProvider.authHeader = 'Authorization';\n        //\n        // jwtInterceptorProvider.tokenGetter = function(store){\n        //     return 'Bearer ' + store.get('satellizer_token');\n        // };\n        //\n        // $httpProvider.interceptors.push('jwtInterceptor');\n\n        // $locationProvider.html5Mode(true);\n    }]);\n","'use strict';\n\n/**\n * Route configuration for the RDash module.\n */\nangular.module('Platease').config(['$stateProvider', '$urlRouterProvider', '$httpProvider', 'ROLES',\n    function($stateProvider, $urlRouterProvider, $httpProvider, ROLES) {\n\n        $httpProvider.defaults.useXDomain  = false;\n\n        // For unmatched routes\n\n        $urlRouterProvider.otherwise('/appointments');\n\n        $stateProvider\n            .state('login', {\n                templateUrl: '/templates/login_template.html',\n            })\n            .state('login.form', {\n                url: '/login',\n                templateUrl: '/templates/login.html',\n                controller: 'LoginController'\n            })\n            .state('login.register', {\n                url: '/register',\n                templateUrl: '/templates/register.html',\n                controller: 'RegisterController'\n            })\n            .state('login.recover', {\n                url: '/recover-password',\n                templateUrl: '/templates/recover.html',\n                controller: 'RecoverController'\n            })\n            .state('index', {\n                templateUrl: '/templates/index_template.html',\n                controller: 'GlobalController',\n                resolve: {\n                    user: ['UserData', function(UserData){\n                        return UserData.getData();\n                    }]\n                },\n                data: {\n                    authorizedRoles: [ROLES.admin, ROLES.patient, ROLES.doctor]\n                }\n            })\n            .state('index.appointments', {\n                url: '/appointments',\n                controller: 'AppointmentsController',\n                templateUrl: '/templates/appointments.html',\n                resolve: {\n                    user_appointments: ['Appointments', function(Appointments){\n                        return Appointments.getAllAppoiments();\n                    }]\n                }\n            })\n            .state('index.appointments_add', {\n                url: '/appointments/new',\n                controller: 'NewAppointmentController',\n                templateUrl: '/templates/newAppointment.html',\n                resolve: {\n                    patients: ['Patients', function(Patients){\n                        return Patients.getAllPatients();\n                    }],\n                    appointment: function(){\n                        return null;\n                    }\n                }\n            })\n            .state('index.appointments_edit', {\n                url: '/appointments/edit/:id',\n                controller: 'NewAppointmentController',\n                templateUrl: '/templates/newAppointment.html',\n                resolve: {\n                    patients: ['Patients', function(Patients){\n                        return Patients.getAllPatients();\n                    }],\n                    appointment: ['Appointments', '$stateParams', function(Appointments, $stateParams){\n                        return Appointments.getById($stateParams.id);\n                    }]\n                }\n            })\n            .state('index.appointment_requests', {\n                url: '/appointment-requests',\n                controller: 'UnapprovedAppointmentsController',\n                templateUrl: '/templates/solicitarappointments.html',\n                resolve: {\n                    apmt_requests: ['Appointments', function(Appointments){\n                        return Appointments.getPendingRequests();\n                    }]\n                }\n            })\n            .state('index.appointment_requests_add', {\n                url: '/appointment-requests/add',\n                controller: 'NewAppointmentRequestController',\n                templateUrl: '/templates/newAppointmentRequest.html',\n                resolve: {\n                    doctors: ['Doctor', function(Doctor){\n                        return Doctor.getAllDoctors();\n                    }]\n                }\n            })\n            .state('index.doctor_profile', {\n                url: '/doctor-profile',\n                controller: 'update_DoctorController',\n                templateUrl: '/templates/update_profile.html',\n            })\n            .state('index.patient_profile', {\n                url: '/patient-profile',\n                controller: 'PatientProfileController',\n                templateUrl: '/templates/update_patient_profile.html',\n            })\n            .state('index.supervisor_profile', {\n                url: '/patient-profile',\n                controller: 'SupervisorProfileController',\n                templateUrl: '/templates/update_profile_supervisor.html',\n            })\n\n        ;\n\n            // .state('index', {\n            //     url: '/',\n            //     templateUrl: '/templates/index_layout.html',\n            //     data: {\n            //         authorizedRoles: [ROLES.admin, ROLES.patient, ROLES.doctor]\n            //     }\n            // })\n            // .state('index.appointments', {\n            //     url: 'appointments',\n            //     templateUrl: '/templates/appointments.html'\n            // });\n\n        // Application routes\n        // $stateProvider\n        //     .state('login', {\n        //         url: '/login',\n        //         templateUrl: '/templates/login.html',\n        //         data: {\n        //             requiresLogin: false,\n        //         }\n        //     })\n        //     .state('sensors', {\n        //         url: '/sensors',\n        //         templateUrl: '/templates/sensors.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('appointments', {\n        //         url: '/appointments',\n        //         templateUrl: '/templates/appointments.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('appointment_details', {\n        //         url: '/appointment_details',\n        //         templateUrl: '/templates/appointment_details.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('personal_data', {\n        //         url: '/personal_data',\n        //         templateUrl: '/templates/personal_data.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('patient', {\n        //         url: '/patient',\n        //         templateUrl: '/templates/patient.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('appoiment_patient', {\n        //         url: '/appoiment_patient/:user_id/:appointment_id',\n        //         templateUrl: '/templates/appoiments_user.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('update_profile', {\n        //         url: '/update_profile',\n        //         templateUrl: '/templates/update_profile.html',\n        //         data: {\n        //             requiresLogin: true\n        //         }\n        //     })\n        //     .state('update_patient_profile', {\n        //         url: '/update_patient_profile',\n        //         templateUrl: '/templates/update_patient_profile.html',\n        //         data: {\n        //             requiresLogin: true\n        //         }\n        //     })\n        //     .state('update_profile_supervisor', {\n        //         url: '/update_profile_supervisor',\n        //         templateUrl: '/templates/update_profile_supervisor.html',\n        //         data: {\n        //             requiresLogin: true\n        //         }\n        //     })\n        //     .state('doctors', {\n        //         url: '/doctors',\n        //         templateUrl: '/templates/doctors.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('doctors_unapproved', {\n        //         url: '/doctors_unapproved',\n        //         templateUrl: '/templates/doctors_unapproved.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('solicitar_appointment', {\n        //         url: '/solicitar_appointment',\n        //         templateUrl: '/templates/solicitarappointments.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     })\n        //     .state('medications', {\n        //         url: '/medications',\n        //         templateUrl: '/templates/medications.html',\n        //         data: {\n        //             requiresLogin: true,\n        //             validated : true\n        //         }\n        //     });\n    }\n]).run(['$state', '$rootScope', '$http', '$timeout', '$cookies','$cookieStore', '$location', '$auth',\n    function($state, $rootScope, $http, $timeout, $cookies, $cookieStore, $location, $auth){\n\n    $rootScope.$on('$stateChangeStart', function(evt, to){\n\n        if (undefined !== to.data && undefined !== to.data.authorizedRoles && to.data.authorizedRoles.length > 0){\n            if (!$auth.isAuthenticated()){\n                evt.preventDefault();\n                $state.go('login.form');\n            }\n        }\n\n    });\n}]);","angular.module('Platease')\n    .controller('GlobalController', ['$scope', 'user', function($scope, user){\n        $scope.user = user;\n\n        console.log(user);\n\n    }]);","angular.module('Platease')\n    .controller('LoginController', ['$auth', '$state', '$scope', '$rootScope', 'store' ,function($auth, $state, $scope, $rootScope, store){\n\n        $scope.credentials = {\n            email: '',\n            password: ''\n        };\n\n        $scope.tryLogin = function(){\n            $auth.login($scope.credentials)\n                .then(function(res){\n                    if (undefined !== res.data.token && res.data.token ){\n                        $state.go('index.appointments');\n                    } else {\n                        console.log('authentication error');\n                    }\n                }, function(err){\n                    \n                });\n        };\n\n    }])\n    .controller('RegisterController', [function(){\n\n    }])\n    .controller('RecoverController', [function(){\n\n    }]);\n","angular.module('Platease')\n    .controller('MainController', ['$rootScope','$scope', '$state', 'UserData', 'Doctor_Especiality', '$timeout', 'SensorData', function($rootScope, $scope, $state, UserData, Doctor_Especiality, $timeout, SensorData){\n        $scope.state_name = $state.current.name;\n\n        $rootScope.$on('$locationChangeSuccess', function(e){\n            $scope.state_name = $state.current.name;\n        });\n\n        $scope.navigationActiveClass = function(stateName){\n            return stateName == $state.current.name ? ' active ' : '';\n        };\n\n        UserData.then(function(data){\n            var date = Date.now();\n            $scope.user_data = data[0];\n            $scope.user_data.profile_picture = $scope.user_data.profile_picture+\"?=\"+date;\n\n            if($scope.user_data.user_type == 'doctor'){\n                Doctor_Especiality.getADoctorEspeciality($scope.user_data.speciality).then(function(doctor_speciality){\n                    $scope.doctor_speciality = doctor_speciality;\n                }, function(){});\n                Doctor_Especiality.getADoctorEspeciality($scope.user_data.second_speciality).then(function(doctor_speciality){\n                    $scope.doctor_second_speciality = doctor_speciality;\n                }, function(){});\n            }\n            if($scope.user_data.user_type == 'supervisor'){\n               $state.go('doctors');\n            }\n        }, function(){\n\n        });\n\n\n        $scope.actual_date  = new Date();\n\n\n\n        //$scope.getsensorsdata = function(){\n        //    $timeout(function(){\n        //        SensorData.getSensorData().then(function(sensors){\n        //            console.log(sensors);\n        //            toastr.success('ok');\n        //        }, function(){\n        //            toastr.error('Error al contactar con los sensores');\n        //        });\n        //        $scope.getsensorsdata();\n        //    }, 5000);\n        //};\n        //$scope.getsensorsdata();\n\n\n    }]);","angular\n    .module('Platease')\n    .controller('AppointmentsController', ['$scope', 'Appointments', '$q', 'Patients', '$http', '$modal', '$stateParams', 'user_appointments', 'dialog', function ($scope, Appointments, $q, Patients, $http, $modal, $stateParams, user_appointments, dialog) {\n\n        $scope.cantRecordsByPages = 10;\n\n        $scope.assited = false;\n\n        $scope.appointments = user_appointments;\n\n        toastr.options.closeButton = true;\n\n        $scope.setAssisted = function(assisted){\n            $scope.assisted = assisted;\n            $scope.toSearch()\n        };\n\n        $scope.termFilter = function(criteria){\n            $scope.criterial = criteria;\n            $scope.toSearch();\n        };\n\n        $scope.toSearch = function(){\n\n            Appointments.searchAppoiments($scope.criterial, $scope.assisted).then(function(data){\n\n                $scope.appointments = data;\n\n            }, function(){\n                toastr.error(\"Error al Relizar la Operación\");\n            });\n        };\n\n        $scope.removeAppointment = function(appointment, index){\n            dialog.confirm('Confirmación', '¿Desea eliminar la cita y todos los datos asociados a esta?')\n                .then(function(res){\n                    if (res == true){\n                        Appointments.removeAppointment(appointment.appointment_id)\n                            .then(function(res){\n                                $scope.appointments.splice(index,1);\n                                toastr.success(res.message);\n                            }, function(res){\n                                if (undefined !== res.message){\n                                    toastr.error(res.message);\n                                } else {\n                                    toastr.error('Ha ocurrido un error al eliminar la cita');\n                                }\n                            });\n\n                    }\n                });\n        };\n\n    }])\n    .controller('NewAppointmentController', ['$scope', 'patients', 'Appointments', '$state', 'appointment', function($scope, patients, Appointments, $state, appointment){\n\n        $scope.patients = patients;\n\n        if (appointment != null){\n            $scope.appointment = appointment;\n\n            $scope.date = appointment.datetime.date;\n\n            var datetemp = new Date();\n\n            datetemp.setHours(appointment.datetime.time[0]);\n            datetemp.setMinutes(appointment.datetime.time[1]);\n            $scope.time = datetemp;\n\n        } else {\n\n            $scope.date = new Date();\n\n            $scope.time = new Date();\n            $scope.date = $scope.time.getFullYear()+\"-\" + ($scope.time.getMonth() < 10 ? '0' + $scope.time.getMonth() : $scope.time.getMonth())+\"-\"+$scope.time.getDate();\n\n        }\n\n        $scope.hstep = 1;\n        $scope.mstep = 1;\n\n        $scope.options = {\n            hstep: [1, 2, 3],\n            mstep: [1, 5, 10, 15, 25, 30]\n        };\n\n        $scope.ismeridian = true;\n        $scope.toggleMode = function() {\n            $scope.ismeridian = ! $scope.ismeridian;\n        };\n\n        $scope.update = function() {\n            var d = new Date();\n            d.setHours( 14 );\n            d.setMinutes( 0 );\n            $scope.time = d;\n        };\n\n        $scope.handleInsert =function(){\n\n            $(\"#appointment_form\").\n            validate({\n                rules: {\n                    patient: {\n                        required: true\n                    },\n                    date: {\n                        required: true\n                    }\n                }\n            });\n            if ($('#appointment_form').valid()){\n                $scope.upsertAppointment();\n            }\n        };\n\n        $scope.upsertAppointment = function () {\n\n            $scope.datetime = $scope.date + \" \" + $scope.time.getHours() + \":\" + $scope.time.getMinutes();\n\n            Appointments.upsertAppointment(undefined !== appointment && appointment ? appointment.id : null, $scope.datetime, $scope.appointment.patient_id)\n                .then(function(res){\n                    toastr.success(res.message);\n                    $state.go('index.appointments');\n                }, function(res){\n                    toastr.error(res.message);\n                });\n        };\n    }]);","angular\n    .module('Platease')\n    .controller('appointmentDetailsController', ['$scope', 'AppoimentDetails', function($scope, AppoimentDetails){\n        $scope.seemorescreen = false;\n        AppoimentDetails.getAllIndicationsByPatient().then(function(data){\n\n            $scope.data = data;\n\n        }, function(){\n            alert('Ha ocurrido un error al obtener las citas médicas');\n        });\n\n        $scope.seemore = function(appointment_id){\n            $scope.seemorescreen = true;\n            AppoimentDetails.getAIndicationsByPatient(appointment_id).then(function(appointment_detatail){\n                $scope.appointment_detatail = appointment_detatail;\n             }, function(){\n\n             });\n        };\n\n        $scope.cancelseemore = function(){\n            $scope.seemorescreen = false;\n        };\n\n    }]);","angular\n    .module('Platease')\n    .controller('medicationsController', ['$scope', 'Medication_Appointment', 'Medications', function($scope, Medication_Appointment, Medications){\n\n        $scope.medicationseemore = false;\n\n        $scope.seemore = function(medication_id, appointment_id){\n            $scope.medicationseemore = true;\n\n            Medication_Appointment.getAMedicationAppointmentByid(medication_id, appointment_id).then(function(medication_appointment){\n                $scope.medication_appointment = medication_appointment;\n            }, function(){\n                toastr.success('Error al Traer la Medicación');\n            });\n        };\n\n        $scope.cancelseemore = function(){\n            $scope.medicationseemore = false;\n        };\n        Medication_Appointment.getAllMedicationsAppointmentByPatient().then(function(medications){\n         $scope.medications = medications;\n        }, function(){\n\n        })\n    }]);\n\n","angular\n    .module('Platease')\n    .controller('sensorsController', ['$scope','$timeout', 'SensorData', function($scope, $timeout, SensorData){\n\n        $scope.sensor_data = {\n            cloudsalud: {\n                tag: 'realtime',\n                success: true,\n                error: false,\n                sensors: [\n                    {\n                        id: 0,\n                        name: 'Temperatura',\n                        value: 37.2,\n                        type_sensor: 1,\n                        labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\"],\n                        series: 'Temperatura corporal',\n                        data: [\n                            [35.6, 37, 37.5, 38, 38.3, 0, 0],\n                        ]\n                    },\n                    {\n                        id: 1,\n                        name: 'Oxígeno',\n                        value: 87,\n                        type_sensor: 3,\n                        labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\"],\n                        series: 'Concentracion de oxígeno',\n                        data: [\n                            [40, 60, 80, 70, 60, 0, 0],\n                        ]\n                    },\n                    {\n                        id: 2,\n                        name: 'Ritmo cardíaco',\n                        value: 93,\n                        type_sensor: 2,\n                        labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\"],\n                        series: 'Ritmo cardíaco',\n                        data: [\n                            [98, 90, 130, 146, 30, 0, 0],\n                        ]\n                    },\n\n                ]\n            }\n        };\n\n        //SensorData.then(function(data){\n        //\n        //    //var sensors = data.laria.sensors;\n        //    //\n        //    //for(var i in sensors){\n        //    //   console.log(sensors[i]);\n        //    //}\n        //\n        //}, function(){\n        //    alert('Ha ocurrido un error al obtener datos de los sensores');\n        //});\n    }]);\n\n","angular\n    .module('Platease')\n    .controller('patientController', ['$scope', '$http', 'Patients', '$q', '$modal', '$timeout', function ($scope, $http, Patients, $q, $modal, $timeout) {\n        var picture = null;\n        $scope.insertShow = false;\n        $scope.profile_picture = 'public/uploads/users_pictures/default.jpg';\n        var archivos = document.getElementById('picture');\n        archivos.addEventListener('change', upload, false);\n        //var pictureBox = document.getElementById('profile_picture');\n\n        function upload(e) {\n            var archivos = e.target.files;\n            var archivo = archivos[0];\n\n\n            var datos = new FormData();\n            datos.append('archivo', archivo);\n\n            var solicitud = new XMLHttpRequest();\n            var xmlupload = solicitud.upload;\n            xmlupload.addEventListener('loadstart', begin, false);\n\n            if (archivo.type == 'image/png' || archivo.type == 'image/jpeg') {\n                if (archivo.size <= 2048000) {\n                    xmlupload.addEventListener('load', finish, false);\n                    solicitud.open(\"POST\", '/index.php/uploadprofilepicture', true);\n                    solicitud.send(datos);\n                    picture = archivo;\n                } else {\n                    toastr.error(\"Imagenes de Menos de 2 MB\");\n                }\n            } else {\n                toastr.error(\"Solo Imagenes PNG o JPG\");\n            }\n        }\n\n        function begin() {\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.profile_picture = '/public/images/loading.gif';\n                });\n            }, 0);\n        }\n\n        function finish() {\n            toastr.success(\"Se Vinculó Imagen al Usuario\");\n            $scope.imagen = picture;\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.profile_picture = '/public/uploads/users_pictures/' + picture.name;\n                });\n            }, 0);\n        }\n\n        Patients.getAllPatients().then(function (patients) {\n            $scope.patients = patients;\n        }, function () {\n            toastr.error(\"Error en la Operación\");\n        });\n\n        $scope.showAddPatient = function () {\n            $scope.insertShow = true;\n            $scope.updateShowButton = false;\n            $scope.insertShowButton = true;\n            $scope.patient = \"\";\n        };\n\n        $scope.cancelInsertPatient = function (patient_id) {\n\n            $scope.insertShow = false;\n            $scope.profile_picture = 'public/uploads/users_pictures/default.jpg';\n            if (picture != null && picture != \" \") {\n                Patients.deleteProfilePicture(picture.name).then(function () {\n                    toastr.info('Se Desvinculó Imagen al Usuario');\n                    var date = new Date();\n                    $scope.profile_picture = 'public/uploads/users_pictures/default.jpg';\n                }, function () {\n                    toastr.error(\"Error Eliminando Imagen\");\n                });\n                $scope.patient = \"\";\n                picture = null;\n            }\n        };\n\n        $scope.insertPatient = function () {\n            $(\"#patient_form\").\n                validate({\n                    rules: {\n                        email: {\n                            required: true,\n                            email: true,\n                            remote: \"validar_email.php\"\n                        },\n                        name: {\n                            required: true,\n                            minlength: 3\n                        },\n                        lastname: {\n                            required: true,\n                            minlength: 10\n                        },\n                        documentation:{\n                            required: true\n                        },\n                        document: {\n                            required: true,\n                            minlength: 5\n                        },\n                        idDisp: {\n                            required: true,\n                            number: true\n\n                        }\n                    }\n                });\n            if ($('#patient_form').valid()){\n                $scope.insertShow = true;\n                if (picture == null) {\n                    $scope.imagen = {'name': 'default', 'type': \"image/jpeg\"}\n                }\n                Patients.insertPatient($scope.patient, $scope.imagen).then(function (patient) {\n                    $scope.patients.push(patient);\n                    $scope.insertShow = false;\n                    toastr.success('Operación Realizada Satisfactoriamente');\n                    picture = null;\n                    $scope.patient = \"\";\n                }, function () {\n                    toastr.error(\"Error al Inzertar Paciente\");\n                });\n            }\n        };\n\n        $scope.toSearch = function (criterial) {\n\n            Patients.searchPatient(criterial).then(function (patient) {\n                $scope.patients = patient;\n            }, function () {\n                toastr.error(\"Error al Relizar la Operación\");\n            });\n        };\n\n        $scope.deletepatient = function (patient_id, index) {\n            Patients.deletePatient(patient_id).then(function (patient) {\n                $scope.patients.splice(index, 1);\n                toastr.success('Operación Realizada Satisfactoriamente');\n                $scope.patient = \" \";\n                picture = null;\n            }, function () {\n                toastr.error(\"Error al Relizar la Operación\");\n            });\n        };\n\n        $scope.loadpatienttoedit = function (index, patient_id) {\n\n            Patients.selectSinglePatientById(patient_id).then(function (patient) {\n                var date = Date.now();\n                $scope.patientIndex = index;\n                $scope.profile_picture = patient.profile_picture + \"?t=\" + date;\n                var documentationvalue = \"\";\n                if(patient.curp == ''){\n                    documentationvalue = patient.passaport;\n                }\n                if(patient.passaport == ''){\n                    documentationvalue = patient.curp;\n                }\n\n                $scope.patient = {\n                    'documentationalue' : documentationvalue,\n                    'patient_id': patient.id,\n                    'lugar_origen' : patient.lugar_origen,\n                    'email': patient.email,\n                    'name': patient.name,\n                    'lastname': patient.lastname,\n                    'curp': patient.curp,\n                    'passaport' : patient.passaport,\n                    'idDisp': patient.idDisp,\n                    'cell': patient.cell,\n                    'seguro_medico': patient.seguro_medico,\n                    'sex': patient.sex,\n                    'city': patient.city,\n                    'colony': patient.colony,\n                    'street': patient.street,\n                    'postal_code': patient.postal_code,\n                    'number': patient.number,\n                    'birthday': patient.birthday,\n                    'profile_picture': patient.profile_picture + \"?t=\" + date,\n                    'religion': patient.religion,\n                    'estado_civil': patient.estado_civil\n                };\n\n                $scope.insertShow = true;\n                $scope.insertShowButton = false;\n                $scope.updateShowButton = true;\n            }, function () {\n                toastr.error(\"Error al Relizar la Operación\");\n            });\n        };\n\n        $scope.updatePatient = function (patient_id) {\n            $(\"#patient_form\").\n                validate({\n                    rules: {\n                        email: {\n                            required: true,\n                            email: true,\n                        },\n                        name: {\n                            required: true,\n                            minlength: 3\n                        },\n                        lastname: {\n                            required: true,\n                            minlength: 10\n                        },\n                        documentation:{\n                            required: true\n                        },\n                        document: {\n                            required: true,\n                            minlength: 5\n                        },\n                        idDisp: {\n                            required: true,\n                            number: true\n\n                        }\n                    }\n                });\n            if ($('#patient_form').valid()){\n                        if (picture == null) {\n                            $scope.imagen = {'name': \" \", 'type': \" \"}\n                        }\n                        Patients.updatePatient(patient_id, $scope.patient, $scope.imagen).then(function (updatedpatient) {\n                            $scope.insertShow = false;\n                            $scope.patients.splice($scope.patientIndex, 1, updatedpatient);\n                            toastr.success('Operación Realizada Satisfactoriamente');\n\n\n                            $timeout(function () {\n                                $scope.$apply(function () {\n                                    //$scope.profile_picture.path = updatedpatient.profile_picture;\n                                    $scope.profile_picture = updatedpatient.profile_picture;\n                                });\n                            }, 0);\n                            $scope.patient = \"\";\n                            picture = null;\n                        }, function () {\n                            toastr.error(\"Error al Relizar la Operación\");\n                        });\n            }\n\n        };\n\n        $scope.confirmdelete = function (patient_id, index) {\n\n            Patients.selectSinglePatientById(patient_id).then(function (patient) {\n                var date = Date.now();\n                $scope.patientIndex = index;\n                $scope.profile_picture = patient.profile_picture + \"?t=\" + date;\n                $scope.patient = {\n                    'patient_id': patient.id,\n                    'lugar_origen' : patient.lugar_origen,\n                    'email': patient.email,\n                    'name': patient.name,\n                    'lastname': patient.lastname,\n                    'curp': patient.curp,\n                    'idDisp': patient.idDisp,\n                    'cell': patient.cell,\n                    'seguro_medico': patient.seguro_medico,\n                    'sex': patient.sex,\n                    'city': patient.city,\n                    'colony': patient.colony,\n                    'street': patient.street,\n                    'postal_code': patient.postal_code,\n                    'number': patient.number,\n                    'birthday': patient.birthday,\n                    'profile_picture': patient.profile_picture + \"?t=\" + date,\n                    'religion': patient.religion,\n                    'estado_civil': patient.estado_civil\n                };\n            }, function () {\n                toastr.error(\"Error al Relizar la Operación\");\n            });\n            $modal.open({\n                animation: true,\n                templateUrl: '/public/templates/modal/deletepatient.html',\n                controller: 'patientController',\n                size: 'md',\n                scope : $scope\n            }).result.then(function () {\n                    $scope.deletepatient(patient_id, index);\n                }, function () {\n                    $scope.patient = \"\";\n                    $scope.profile_picture = '/public/uploads/users_pictures/default.jpg';\n                });\n        };\n    }]);","angular\n    .module('Platease')\n    .controller('appoiment_userController', ['$scope','$rootScope', 'Appointments', 'Patients', '$stateParams', '$modal', 'Medication_Appointment', 'Medications', '$state', '$timeout', function($scope, $rootScope, Appointments, Patients, $stateParams, $modal, Medication_Appointment, Medications, $state, $timeout){\n        $scope.updateShow = false;\n\n        $scope.showEdit = function(){\n            $scope.updateShow = true;\n            $scope.loadpatienttoedit($stateParams.user_id);\n        };\n\n        $scope.cancelEdit = function(){\n            $scope.updateShow = false;\n        };\n\n        var picture = null;\n        $scope.profile_picture = 'public/uploads/users_pictures/default.jpg';\n        var archivos = document.getElementById('picture');\n        archivos.addEventListener('change', upload, false);\n\n        function upload(e) {\n            var archivos = e.target.files;\n            var archivo = archivos[0];\n\n\n            var datos = new FormData();\n            datos.append('archivo', archivo);\n\n            var solicitud = new XMLHttpRequest();\n            var xmlupload = solicitud.upload;\n            xmlupload.addEventListener('loadstart', begin, false);\n\n            if (archivo.type == 'image/png' || archivo.type == 'image/jpeg') {\n                if (archivo.size <= 2048000) {\n                    xmlupload.addEventListener('load', finish, false);\n                    solicitud.open(\"POST\", '/index.php/uploadprofilepicture', true);\n                    solicitud.send(datos);\n                    picture = archivo;\n                } else {\n                    toastr.error(\"Imagenes de Menos de 2 MB\");\n                }\n            } else {\n                toastr.error(\"Solo Imagenes PNG o JPG\");\n            }\n        }\n\n        function begin() {\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.patient.profile_picture = '/public/images/loading.gif';\n                });\n            }, 0);\n        }\n\n        function finish() {\n            toastr.success(\"Se Vinculó Imagen al Usuario\");\n            $scope.imagen = picture;\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.patient.profile_picture = '/public/uploads/users_pictures/' + picture.name;\n                });\n            }, 0);\n        }\n\n      Patients.selectSinglePatientById($stateParams.user_id).then(function(patient){\n\n        $scope.patient = patient;\n\n        }, function(){\n          toastr.error(\"Error al Obtener la Operación\");\n      });\n\n        Appointments.oneAppoiment($stateParams.appointment_id).then(function(appointment){\n\n            $scope.appointment = {\n                'appointment_id': appointment.id,\n                'date': appointment.date,\n                'patient_id': appointment.patient_id,\n                'assisted': appointment.assisted,\n                'indications' : appointment.indications,\n                'doctor_id': appointment.doctor_id\n            };\n\n        }, function(){\n            toastr.error(\"Error al Relizar la Operación\");\n        });\n\n        Medication_Appointment.getAllMedicationsAppointmentByAppointment($stateParams.appointment_id).then(function(medications_appointment){\n            $scope.medications_appointment = medications_appointment;\n        }, function(){\n            toastr.error(\"Error al Relizar la Operaci&oacute;n\");\n        });\n\n        $scope.doAppointment = function(){\n            \n            Appointments.doAppointment($scope.appointment).then(function(){\n\n            }, function(){\n                toastr.error(\"Error al Relizar la Cita\");\n            });\n        };\n\n\n        $scope.newmedication = function(){\n            $scope.newmedications = \"\";\n            Medications.getAllMedications().then(function(medications){\n\n                $scope.medications = medications;\n\n            }, function(){\n                toastr.error(\"Error al Traer Lista de Medicamentos\");\n            });\n            $modal.open({\n                animation: true,\n                templateUrl: '/public/templates/modal/newmedication.html',\n                controller: 'appoiment_userController',\n                size: 'md',\n                scope : $scope\n            }).result.then(function (newmedications) {\n                    var appointment_medications = {\n                        'medication' : newmedications.medication_id,\n                        'dose' : newmedications.dose,\n                        'iterations' : newmedications.iterations,\n                        'date' : null,\n                        'appointment' : $stateParams.appointment_id,\n                        'notes' : newmedications.notes\n                    };\n                    Medications.newMedication(appointment_medications).then(function(newmedication){\n                        $scope.medications_appointment.push(newmedication);\n                        toastr.success('Se Insert&oacute; Satifactoriamente');\n                    }, function(){\n                        toastr.error(\"Error al Insertar la Medicaci&oacute;n\");\n                    });\n                }, function () {\n                    toastr.info(\"Operación Cancelada\");\n                });\n        };\n\n        $scope.deleteMedication = function(index, appoiments_id, medications_id){\n            Medication_Appointment.getAMedication(appoiments_id, medications_id).then(function(medication){\n                $scope.medication = medication;\n            }, function(){\n                toastr.error(\"Error al Traer la Medicaci&oacute;n\");\n            });\n            $modal.open({\n                animation: true,\n                templateUrl: '/public/templates/modal/deletemedication.html',\n                controller: 'appoiment_userController',\n                size: 'md',\n                scope : $scope\n            }).result.then(function () {\n                    Medication_Appointment.deleteAMedication(appoiments_id, medications_id).then(function(medication){\n                        $scope.medications_appointment.splice(index, 1);\n                    }, function(){\n                        toastr.error(\"Error al Eliminar Medicaci&oacute;n\");\n                    });\n                }, function () {\n                    toastr.info(\"Operación Cancelada\");\n                });\n        };\n\n        $scope.loadMedication = function(index, appoiments_id, medications_id){\n\n            Medications.getAllMedications().then(function(medications){\n                $scope.medications = medications;\n            }, function(){\n                toastr.error(\"Error al Traer Lista de Medicamentos\");\n            });\n\n            Medication_Appointment.getAMedication(appoiments_id, medications_id).then(function(onemedication){\n                $scope.newmedications = onemedication;\n            }, function(){\n                toastr.error(\"Error al Traer la Medicaci&oacute;n\");\n            });\n            console.log($scope);\n            $modal.open({\n                animation: true,\n                templateUrl: '/public/templates/modal/newmedication.html',\n                controller: 'appoiment_userController',\n                size: 'md',\n                scope : $scope\n            }).result.then(function (newmedications) {\n                    Medication_Appointment.updateMedication(medications_id, newmedications).then(function(medication){\n                        Medication_Appointment.getAllMedicationsAppointmentByAppointment($stateParams.appointment_id).then(function(medications_appointment){\n                            $scope.medications_appointment = medications_appointment;\n                        }, function(){\n                            toastr.error(\"Error al Relizar la Operaci&oacute;n\");\n                        });\n                    }, function(){\n                        toastr.error(\"Error al Traer la Medicaci&oacute;n\");\n                    });\n\n                }, function () {\n                    toastr.info(\"Operación Cancelada\");\n                });\n        };\n\n        $scope.deletepatient = function (patient_id) {\n            Patients.deletePatient(patient_id).then(function () {\n                $state.go('appointments');\n                toastr.success('Usuario Eliminado Satisfactoriamente');\n                $scope.patient = \" \";\n                picture = null;\n            }, function () {\n                toastr.error(\"Error al Relizar la Operación\");\n            });\n        };\n\n        $scope.confirmdelete = function (patient_id) {\n\n            $modal.open({\n                animation: true,\n                templateUrl: '/public/templates/modal/deletepatient.html',\n                controller: 'appoiment_userController',\n                size: 'md',\n                scope : $scope\n            }).result.then(function () {\n                    $scope.deletepatient(patient_id);\n                }, function () {\n\n                });\n        };\n\n\n        $scope.loadpatienttoedit = function (patient_id) {\n\n            Patients.selectSinglePatientById(patient_id).then(function (patient) {\n                var date = Date.now();\n                $scope.profile_picture = patient.profile_picture + \"?t=\" + date;\n                var documentationvalue = \"\";\n                if(patient.curp == ''){\n                    documentationvalue = patient.passaport;\n                }\n                if(patient.passaport == ''){\n                    documentationvalue = patient.curp;\n                }\n\n                $scope.patient = {\n                    'documentationalue' : documentationvalue,\n                    'patient_id': patient.id,\n                    'lugar_origen' : patient.lugar_origen,\n                    'email': patient.email,\n                    'name': patient.name,\n                    'lastname': patient.lastname,\n                    'curp': patient.curp,\n                    'passaport' : patient.passaport,\n                    'idDisp': patient.idDisp,\n                    'cell': patient.cell,\n                    'seguro_medico': patient.seguro_medico,\n                    'sex': patient.sex,\n                    'city': patient.city,\n                    'colony': patient.colony,\n                    'street': patient.street,\n                    'postal_code': patient.postal_code,\n                    'number': patient.number,\n                    'birthday': patient.birthday,\n                    'profile_picture': patient.profile_picture + \"?t=\" + date,\n                    'religion': patient.religion,\n                    'estado_civil': patient.estado_civil\n                };\n            }, function () {\n                toastr.error(\"Error al Relizar la Operación\");\n            });\n        };\n\n        $scope.updatePatient = function (patient_id) {\n\n            if (picture == null) {\n                $scope.imagen = {'name': \" \", 'type': \" \"}\n            }\n            Patients.updatePatient(patient_id, $scope.patient, $scope.imagen).then(function (updatedpatient) {\n                $scope.updateShow = false;\n                Patients.selectSinglePatientById($stateParams.user_id).then(function(patient){\n                    $scope.patient = patient;\n                    $timeout(function () {\n                        $scope.$apply(function () {\n                            $scope.profile_picture = patient.profile_picture;\n                        });\n                    }, 0);\n                }, function(){\n                    toastr.error(\"Error al Obtener la Operación\");\n                });\n                toastr.success('Operación Realizada Satisfactoriamente');\n\n                $scope.patient = \"\";\n                picture = null;\n            }, function () {\n                toastr.error(\"Error al Relizar la Operación\");\n            });\n        };\n\n    }]);","angular\n    .module('Platease')\n    .controller('religionController', ['$scope','$rootScope', 'Patients', '$stateParams', function($scope, $rootScope, Patients, $stateParams){\n\n\n      Religion.getAllReligions().then(function(religions){\n\n        //$scope.patient = patient;\n\n        }, function(){\n            alert('Ha ocurrido un error al obtener las citas médicas');\n           });\n\n    }]);","angular\n    .module('Platease')\n    .controller('doctorsController', ['$scope', 'Doctor', '$q', 'Patients', '$http', '$modal', function ($scope, Doctor, $q, Patients, $http, $modal) {\n\n        toastr.options.closeButton = true;\n        $scope.updateShow = false;\n\n        Doctor.getAllDoctors().then(function(doctors){\n            $scope.doctors = doctors;\n        }, function(){\n            toastr.error('Error al Traer Lista de Doctores');\n        });\n\n        $scope.deleteDoctor = function(doctor_id){\n            Doctor.deleteDoctor(doctor_id).then(function(){\n                Doctor.getAllDoctors().then(function(doctors){\n                    $scope.doctors = doctors;\n                }, function(){\n                    toastr.error('Error al Traer Lista de Doctores');\n                });\n                toastr.success('Operación Realizada Satisfactoriamente');\n            }, function(){\n                toastr.error('Error al Eliminar el Doctor');\n            });\n        };\n\n        $scope.confirmdelete = function(doctor_id){\n\n            Doctor.getADoctorByIdpassed(doctor_id).then(function(doctor){\n             $scope.doctor = doctor;\n            }, function(){\n                toastr.error('Error al traer al Doctor');\n            });\n            $modal.open({\n                animation: true,\n                templateUrl: '/public/templates/modal/deletedoctor.html',\n                controller: 'doctorsController',\n                size: 'md',\n                scope : $scope\n            }).result.then(function () {\n                    $scope.deleteDoctor(doctor_id);\n                }, function () {\n                    toastr.info('Cancelada Satisfactoriamente');\n                });\n        };\n\n        $scope.seemore = function(doctor_id){\n\n            $scope.doctorShow = true;\n\n            Doctor.getADoctorByIdpassed(doctor_id).then(function(doctor){\n                $scope.doctor = doctor;\n            }, function(){\n                toastr.error('Error al traer medico');\n            });\n\n\n\n        }\n\n    }]);","angular\n    .module('Platease')\n    .controller('unaproveddoctorsController', ['$scope', 'Doctor', '$q', 'Patients', '$http', '$modal', function ($scope, Doctor, $q, Patients, $http, $modal) {\n\n        toastr.options.closeButton = true;\n        $scope.doctorShow = false;\n\n\n        Doctor.getAllDoctorsUnapproved().then(function(doctors){\n            $scope.doctors = doctors;\n        }, function(){\n            toastr.error('Error al traer lista de Doctor');\n        });\n\n        $scope.deleteDoctor = function(doctor_id){\n            Doctor.deleteDoctor(doctor_id).then(function(){\n                Doctor.getAllDoctorsUnapproved().then(function(doctors){\n                    $scope.doctors = doctors;\n                }, function(){\n                    toastr.error('Error al Traer Lista de Doctores');\n                });\n                toastr.success('Operación Realizada Satisfactoriamente');\n            }, function(){\n                toastr.error('Error al Eliminar el Doctor');\n            });\n        };\n\n        $scope.confirmdelete = function(doctor_id){\n\n            Doctor.getADoctorByIdpassed(doctor_id).then(function(doctor){\n                $scope.doctor = doctor;\n            }, function(){\n                toastr.error('Error al traer al Doctor');\n            });\n            $modal.open({\n                animation: true,\n                templateUrl: '/public/templates/modal/deleteunapproveddoctor.html',\n                controller: 'unaproveddoctorsController',\n                size: 'md',\n                scope : $scope\n            }).result.then(function () {\n                    $scope.deleteDoctor(doctor_id);\n                }, function () {\n                    toastr.info('Cancelada Satisfactoriamente');\n                });\n        };\n\n        $scope.seemore = function(doctor_id){\n\n            $scope.doctorShow = true;\n\n            Doctor.getADoctorByIdpassed(doctor_id).then(function(doctor){\n                $scope.doctor = doctor;\n            }, function(){\n                toastr.error('Error al traer Doctor');\n            });\n\n\n\n        }\n\n        $scope.certifyDoctor = function(doctor_id){\n            Doctor.certifyDoctor(doctor_id).then(function(){\n                $scope.doctorShow = false;\n                toastr.success('Operación Realizada Satisfactoriamente');\n                Doctor.getAllDoctorsUnapproved().then(function(doctors){\n                    $scope.doctors = doctors;\n                }, function(){\n                    toastr.error('Error al traer lista de Doctor');\n                });\n            }, function(){\n                toastr.error('Error al certificar el Doctor');\n            });\n        }\n\n\n    }]);","angular\n    .module('Platease')\n    .controller('update_PatientController', ['$scope', '$http', 'Patients', '$q', '$modal', '$timeout', '$state',  function ($scope, $http, Patients, $q, $modal, $timeout, $state) {\n\n        var picture = null;\n        $scope.insertShow = false;\n        var archivos = document.getElementById('picture');\n        archivos.addEventListener('change', upload, false);\n\n\n        function upload(e) {\n            var archivos = e.target.files;\n            var archivo = archivos[0];\n\n\n            var datos = new FormData();\n            datos.append('archivo', archivo);\n\n            var solicitud = new XMLHttpRequest();\n            var xmlupload = solicitud.upload;\n            xmlupload.addEventListener('loadstart', begin, false);\n\n            if (archivo.type == 'image/png' || archivo.type == 'image/jpeg') {\n                if (archivo.size <= 2048000) {\n                    xmlupload.addEventListener('load', finish, false);\n                    solicitud.open(\"POST\", '/index.php/uploadprofilepicture', true);\n                    solicitud.send(datos);\n                    picture = archivo;\n                } else {\n                    toastr.error(\"Imagenes de Menos de 2 MB\");\n                }\n            } else {\n                toastr.error(\"Solo Imagenes PNG o JPG\");\n            }\n        }\n\n        function begin() {\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.patient.profile_picture = 'public/images/loading.gif';\n                });\n            }, 0);\n        }\n\n        function finish() {\n            toastr.success(\"Se Vinculó Imagen al Usuario\");\n            $scope.imagen = picture;\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.patient.profile_picture = 'public/uploads/users_pictures/' + picture.name;\n                });\n            }, 0);\n        }\n\n        Patients.selectSinglePatient().then(function(patien){\n            $scope.patient = patien;\n        }, function(){\n\n        });\n\n        $scope.updatePatient = function(patient){\n            $(\"#patient_profile_form\").\n                validate({\n                    rules: {\n                        cell: {\n                            required: true,\n                            number: true,\n                            minlength: 7\n                        },\n                        password:{\n                            minlength: 5\n                        },\n                        repassword:{\n                            minlength: 5,\n                            equalTo : password\n                        },\n                        date: {\n                            required: true\n                        },\n                        sex : {\n                            required: true\n                        },\n                        city: {\n                            required: true\n                        },\n                        colony: {\n                            required: true\n                        },\n                        street:{\n                            required : true\n                        },\n                        number:{\n                            required: true,\n                            number: true\n                        },\n                        postal_code: {\n                            required: true,\n                            number: true,\n                            minlength: 5,\n                            maxlength: 5\n                        },\n                        religion:{\n                            required:true\n                        },\n                        estado_civil:{\n                            required:true\n                        },\n                        seguro_medico:{\n                            required:true\n                        },\n                        lugar_origen:{\n                            required:true\n                        }\n                    }\n                });\n            if ($('#patient_profile_form').valid()){\n                var imagen_profile;\n                if($scope.imagen == null){\n                    imagen_profile = {\n                        'name' : null,\n                        'type' : null\n                    };\n                }else{\n                    imagen_profile = $scope.imagen;\n                }\n                Patients.updatePatientProfile(patient, imagen_profile).then(function(patient){\n                        window.location = \"/index.php\";\n                }, function(){\n\n                });\n            }\n        }\n\n\n    }]);","angular\n    .module('Platease')\n    .controller('update_DoctorController', ['$auth', '$scope', '$http', 'Patients', '$q', '$modal', '$timeout', 'user', function ($auth, $scope, $http, Patients, $q, $modal, $timeout, user) {\n\n        $scope.doctor = user;\n\n        var picture = null;\n        $scope.insertShow = false;\n        var archivos = document.getElementById('picture');\n        archivos.addEventListener('change', upload, false);\n\n\n        function upload(e) {\n            var archivos = e.target.files;\n            var archivo = archivos[0];\n\n\n            var datos = new FormData();\n            datos.append('archivo', archivo);\n\n            var solicitud = new XMLHttpRequest();\n            var xmlupload = solicitud.upload;\n\n            xmlupload.addEventListener('loadstart', begin, false);\n\n            if (archivo.type == 'image/png' || archivo.type == 'image/jpeg') {\n                if (archivo.size <= 2048000) {\n                    xmlupload.addEventListener('load', finish, false);\n                    solicitud.open(\"POST\", '/api/profile-picture', true);\n                    solicitud.setRequestHeader('Authorization', 'Bearer ' + $auth.getToken());\n                    solicitud.send(datos);\n                } else {\n                    toastr.error(\"Imágenes de Menos de 2 MB\");\n                }\n            } else {\n                toastr.error(\"Solo Imágenes PNG o JPG\");\n            }\n        }\n\n        function begin() {\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.doctor.profile_picture = '/images/loading.gif';\n                });\n            }, 0);\n        }\n\n        function finish() {\n            console.log(arguments);\n            toastr.success(\"Se Vinculó Imagen al Usuario\");\n            $scope.imagen = picture;\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.doctor.profile_picture = '/uploads/users_pictures/' + picture.name;\n                });\n            }, 0);\n        }\n\n        $scope.updateDoctor = function(doctor){\n\n            $(\"#upadate_doctor\").\n                validate({\n                    rules: {\n                        email: {\n                            required: true,\n                            email: true\n                        },\n                        name: {\n                            required: true,\n                        },\n                        lastname: {\n                            required: true,\n                        },\n                        specialty: {\n                            required : true\n                        },\n                        professional_license: {\n                            required: true\n                        },\n                        cedula: {\n                            required: true\n                        },\n                        password:{\n                            minlength: 5\n                        },\n                        repassword:{\n                            minlength: 5,\n                            equalTo : password\n                        },\n                        cell: {\n                            required: true,\n                            number: true,\n                            minlength: 7\n                        },\n                        date: {\n                            required: true\n                        },\n                        sex : {\n                          required: true\n                        },\n                        city: {\n                            required: true\n                        },\n                        colony: {\n                            required: true\n                        },\n                        street:{\n                            required : true\n                        },\n                        number:{\n                            required: true,\n                            number: true\n                        },\n                        postal_code: {\n                            required: true,\n                            number: true,\n                            minlength: 5,\n                            maxlength: 5\n                        }\n                    }\n                });\n            if ($('#upadate_doctor').valid()){\n\n                var imagen_profile;\n                if($scope.imagen == null){\n                    imagen_profile = {\n                        'name' : null,\n                        'type' : null\n                    };\n                }else{\n                    imagen_profile = $scope.imagen;\n                }\n\n                Doctor.updateDoctor(doctor, imagen_profile).then(function(doctor){\n                    window.location = \"/index.php\";\n                }, function(){\n\n                });\n\n            }\n\n        };\n    }]);","angular\n    .module('Platease')\n    .controller('update_SupervisorController', ['$scope', '$http', 'Supervisor', '$q', '$modal', '$timeout', 'Doctor', 'Doctor_Especiality', 'UserData', function ($scope, $http, Supervisor, $q, $modal, $timeout, Doctor, Doctor_Especiality, UserData) {\n\n        var picture = null;\n        var archivos = document.getElementById('picture');\n        archivos.addEventListener('change', upload, false);\n\n\n        function upload(e) {\n            var archivos = e.target.files;\n            var archivo = archivos[0];\n\n\n            var datos = new FormData();\n            datos.append('archivo', archivo);\n\n            var solicitud = new XMLHttpRequest();\n            var xmlupload = solicitud.upload;\n            xmlupload.addEventListener('loadstart', begin, false);\n\n            if (archivo.type == 'image/png' || archivo.type == 'image/jpeg') {\n                if (archivo.size <= 2048000) {\n                    xmlupload.addEventListener('load', finish, false);\n                    solicitud.open(\"POST\", '/index.php/uploadprofilepicture', true);\n                    solicitud.send(datos);\n                    picture = archivo;\n                } else {\n                    toastr.error(\"Imagenes de Menos de 2 MB\");\n                }\n            } else {\n                toastr.error(\"Solo Imagenes PNG o JPG\");\n            }\n        }\n\n        function begin() {\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.supervisor.profile_picture = 'public/images/loading.gif';\n                });\n            }, 0);\n        }\n\n        function finish() {\n            toastr.success(\"Se Vinculó Imagen al Usuario\");\n            $scope.imagen = picture;\n            $timeout(function () {\n                $scope.$apply(function () {\n                    $scope.supervisor.profile_picture = 'public/uploads/users_pictures/' + picture.name;\n                });\n            }, 0);\n        }\n\n        Supervisor.getASupervisorById().then(function(supervisor){\n            var date = Date.now();\n            $scope.supervisor = supervisor;\n            $scope.supervisor.profile_picture = $scope.supervisor.profile_picture+\"?t=\"+date;\n        }, function(){\n\n        });\n\n\n        $scope.updatesupervisor = function(supervisor){\n\n            $(\"#update_profile_supervisor\").\n                validate({\n                    rules: {\n                        name: {\n                            required: true,\n                            minlength: 3\n                        },\n                        lastname: {\n                            required: true,\n                            minlength: 10\n                        },\n                        email:{\n                            required:true,\n                            email:true\n                        },\n                        cell: {\n                            required: true,\n                            number: true,\n                            minlength: 7\n                        },\n                        password:{\n                            minlength: 5\n                        },\n                        repassword:{\n                            minlength: 5,\n                            equalTo : password\n                        },\n                        date: {\n                            required: true\n                        },\n                        sex : {\n                            required: true\n                        }\n                    }\n                });\n            if ($('#update_profile_supervisor').valid()){\n                var imagen_profile;\n                if($scope.imagen == null){\n                    imagen_profile = {\n                        'name' : null,\n                        'type' : null\n                    };\n                }else{\n                    imagen_profile = $scope.imagen;\n                }\n\n                Supervisor.updateSupervisor(supervisor, imagen_profile).then(function(supervisor){\n                    window.location = \"/index.php\";\n                }, function(){\n\n                });\n            }\n        }\n\n    }]);","angular\n    .module('Platease')\n    .controller('UnapprovedAppointmentsController', ['$scope', 'Appointments', 'dialog', 'apmt_requests', function ($scope, Appointments, dialog, apmt_requests) {\n\n        toastr.options.closeButton = true;\n\n        $scope.appointments = apmt_requests;\n\n        $scope.removeAppointment = function(appointment, index){\n                dialog.confirm('Confirmación', '¿Desea eliminar la solicitud de cita y todos los datos asociados a esta?')\n                    .then(function(res){\n                            if (res == true){\n                                    Appointments.removeAppointment(appointment.appointment_id)\n                                        .then(function(res){\n                                                $scope.appointments.splice(index,1);\n                                                toastr.success(res.message);\n                                        }, function(res){\n                                                if (undefined !== res.message){\n                                                        toastr.error(res.message);\n                                                } else {\n                                                        toastr.error('Ha ocurrido un error al eliminar la solicitud');\n                                                }\n                                        });\n\n                            }\n                });\n        };\n\n        $scope.approveAppointment = function(appointment, index){\n                dialog.confirm('Confirmación', '¿Desea aprobar la solicitud de cita? Si lo hace el paciente será notificado por email y la cita será agregada a su agenda')\n                    .then(function(res){\n                            if (res == true){\n                                    Appointments.approveAppointment(appointment.appointment_id)\n                                        .then(function(res){\n                                                $scope.appointments.splice(index,1);\n                                                toastr.success(res.message);\n                                        }, function(res){\n                                                if (undefined !== res.message){\n                                                        toastr.error(res.message);\n                                                } else {\n                                                        toastr.error('Ha ocurrido un error al eliminar la solicitud');\n                                                }\n                                        });\n\n                            }\n                    });\n        };\n\n        //$scope.date = new Date();\n        // $scope.time = new Date();\n        // $scope.hstep = 1;\n        // $scope.mstep = 5;\n        //\n        // $scope.options = {\n        //     hstep: [1, 2, 3],\n        //     mstep: [1, 5, 10, 15, 25, 30]\n        // };\n        //\n        // $scope.ismeridian = true;\n        // $scope.toggleMode = function() {\n        //     $scope.ismeridian = ! $scope.ismeridian;\n        // };\n        //\n        // $scope.update = function() {\n        //     var d = new Date();\n        //     d.setHours( 14 );\n        //     d.setMinutes( 0 );\n        //     $scope.time = d;\n        // };\n        //\n        //\n        //\n\n        // $scope.insertShow = false;\n\n        // Appointments.getAllUnapprovedAppoiments().then(function (appoiments) {\n        //     $scope.appoiments = appoiments;\n        // }, function () {\n        //     toastr.error(\"Error al Relizar la Operación\");\n        // });\n        //\n\n        // $scope.showInsert = function () {\n        //     $scope.insertShow = true;\n        //     $scope.insertShowButton = true;\n        //     $scope.time = new Date();\n        //     Doctor.getAllDoctors().then(function (doctors) {\n        //         $scope.doctors = doctors;\n        //\n        //     }, function () {\n        //         toastr.error(\"Error al Obtener Datos de los Doctores\");\n        //     });\n        // };\n\n        // $scope.calcelInsertAppoiment = function () {\n        //     $scope.insertShow = false;\n        //     $scope.insertShowButton = false;\n        //     $scope.updateShowButton = false;\n        //     $scope.appointment.patient_id = \"\";\n        // };\n\n        // $scope.handleInsert =function(){\n        //\n        //     $(\"#solicitar_appointment_form\").\n        //         validate({\n        //             rules: {\n        //                 doctor: {\n        //                     required: true\n        //                 },\n        //                 date: {\n        //                     required: true\n        //                 }\n        //             }\n        //         });\n        //     if ($('#solicitar_appointment_form').valid()){\n        //         $scope.inserAppoiment();\n        //     }\n        // };\n\n        // $scope.inserAppoiment = function () {\n        //     $scope.datetime = $scope.date+\" \"+$scope.time.getHours()+\":\"+$scope.time.getMinutes();\n        //     $http({\n        //         method: 'post', data: {\n        //             'date': $scope.datetime,\n        //             'doctor': $scope.appointment.doctor_id\n        //         },\n        //         url: \"/index.php/insertaunapprovedppointment\"\n        //     }).success(function (data) {\n        //         Appointments.getAllUnapprovedAppoiments().then(function (appoiments) {\n        //             $scope.appoiments = appoiments;\n        //         }, function () {\n        //             toastr.error(\"Error al Relizar la Operación\");\n        //         });\n        //         toastr.success('Se Cre&oacute; la Sita Satisfactoriamente.');\n        //     });\n        //\n        //     $scope.calcelInsertAppoiment();\n        // };\n\n        // $scope.removeunapprovedAppoiment = function (appoiment_id, index) {\n        //\n        //     Appointments.deleteAppoiment(appoiment_id).then(function (data) {\n        //         $scope.appoiments.splice(index,1);\n        //         toastr.success('Sita Eliminada Satisfactoriamente');\n        //     }, function () {\n        //         toastr.error(\"Error al Eliminar la Solicitud de Cita\");\n        //     });\n        // };\n\n        // $scope.approveAppointment = function(appoiment_id, index){\n        //\n        //     Appointments.approveAppointment(appoiment_id).then(function(appointment){\n        //         $scope.appoiments.splice(index, 1);\n        //         toastr.success('Sita Aprobada Satisfactoriamente');\n        //     }, function(){\n        //         toastr.error(\"Error al al Aprobar la Cita\");\n        //     });\n        //\n        // };\n\n        // $scope.confirApproveAppointment = function(appoiment, index){\n        //     $scope.appointment = appoiment;\n        //     console.log($scope);\n        //     $modal.open({\n        //         animation: true,\n        //         templateUrl: '/public/templates/modal/approveapp.html',\n        //         controller: 'unapprovedAppointmentsController',\n        //         size: 'md',\n        //         scope : $scope\n        //     }).result.then(function () {\n        //             $scope.approveAppointment(appoiment.appoiment_id, index);\n        //         }, function () {\n        //             toastr.info(\"Operación Cancelada\");\n        //         });\n        //\n        // };\n\n        // $scope.confirmdeleteunapprovedAppointment = function (appoiment_id, index) {\n        //\n        //     Appointments.oneAppoiment(appoiment_id).then(function(appointment){\n        //         $scope.appointment = appointment;\n        //     }, function(){\n        //         toastr.error(\"Error al Relizar la Operación\");\n        //     });\n        //\n        //     $modal.open({\n        //         animation: true,\n        //         templateUrl: '/public/templates/modal/deleteunapprovedapp.html',\n        //         controller: 'unapprovedAppointmentsController',\n        //         size: 'md',\n        //         scope : $scope\n        //     }).result.then(function () {\n        //             $scope.removeunapprovedAppoiment(appoiment_id, index);\n        //         }, function () {\n        //             toastr.info(\"Operación Cancelada\");\n        //         });\n        // };\n\n\n}])\n    .controller('NewAppointmentRequestController', ['$scope', 'doctors', 'Appointments', '$state', function($scope, doctors, Appointments, $state){\n\n        $scope.doctors = doctors;\n\n        $scope.date = new Date();\n\n        $scope.time = new Date();\n        $scope.date = $scope.time.getFullYear()+\"-\" + ($scope.time.getMonth() < 10 ? '0' + $scope.time.getMonth() : $scope.time.getMonth())+\"-\"+$scope.time.getDate();\n\n        $scope.hstep = 1;\n        $scope.mstep = 1;\n\n        $scope.options = {\n                hstep: [1, 2, 3],\n                mstep: [1, 5, 10, 15, 25, 30]\n        };\n\n        $scope.ismeridian = true;\n        $scope.toggleMode = function() {\n                $scope.ismeridian = ! $scope.ismeridian;\n        };\n\n        $scope.update = function() {\n                var d = new Date();\n                d.setHours( 14 );\n                d.setMinutes( 0 );\n                $scope.time = d;\n        };\n\n        $scope.handleInsert =function(){\n\n                $(\"#appointment_form\").\n                validate({\n                        rules: {\n                                doctor: {\n                                        required: true\n                                },\n                                date: {\n                                        required: true\n                                }\n                        }\n                });\n                if ($('#appointment_form').valid()){\n                        $scope.upsertAppointmentRequest();\n                }\n        };\n\n        $scope.upsertAppointmentRequest = function () {\n\n                $scope.datetime = $scope.date + \" \" + $scope.time.getHours() + \":\" + $scope.time.getMinutes();\n\n                Appointments.upsertAppointmentRequest(undefined !== appointment && appointment ? appointment.id : null, $scope.datetime, $scope.appointment.patient_id)\n                    .then(function(res){\n                            toastr.success(res.message);\n                            $state.go('index.appointments');\n                    }, function(res){\n                            toastr.error(res.message);\n                    });\n        };\n}]);\n","angular\n    .module('Platease')\n    .controller('DoctorProfileController', ['$scope', 'user', function($scope, user){\n\n        $scope.user = user;\n\n    }])\n    .controller('PatientProfileController', ['$scope', 'user', function($scope, user){\n\n    }])\n    .controller('SupervisorProfileController', ['$scope', 'user', function($scope, user){\n\n    }]);\n\n","angular.module('Platease')\n\n    .factory('UserData', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n\n        var data = null;\n\n        return {\n            getData: function(){\n\n                if (data){\n                    return data;\n                }\n\n                var d = $q.defer();\n                $http.get('/api/logged-user')\n                    .success(function(res){\n                        if (res.status == 'success'){\n                            data = res.data;\n                            d.resolve(res.data);\n                        } else {\n                            d.reject();\n                        }\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n                return d.promise;\n            }\n        };\n    }]);\n\nangular.module('Platease')\n    .factory('Supervisor', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n      return {\n          getASupervisorById : function()\n          {\n              var d = $q.defer();\n              $http.get('/index.php/getasupervisor')\n                  .success(function(res){\n                      d.resolve(res);\n                  })\n                  .error(function(status){\n                      d.reject(status);\n                  });\n\n              return d.promise;\n          },\n          updateSupervisor : function(supervisor, imagen)\n          {\n              var d = $q.defer();\n              $http({method:'put', data:{\n                  'supervisor' : supervisor,\n                  'imagen_name' : imagen.name,\n                  'imagen_type' : imagen.type\n              },\n                  url: \"/index.php/updatesupervisor\"}).success(function (doctor) {\n                  d.resolve(doctor);\n              }).error(function(){\n                  d.reject('error');\n              });\n\n              return d.promise;\n          }\n      };\n    }]);\n\nangular.module('Platease')\n    .factory('SensorData', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n        return {\n            getSensorData : function()\n            {\n                var d = $q.defer();\n                $http.get('/index.php/getsensordata')\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            }\n        };\n    }]);\n\n\nangular.module('Platease')\n    .factory('Medications', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n       return {\n           getAllMedications : function()\n           {\n               var d = $q.defer();\n               $http.get('/index.php/medications')\n                   .success(function(res){\n                       d.resolve(res);\n                   })\n                   .error(function(status){\n                       d.reject(status);\n                   });\n\n               return d.promise;\n           },\n           getAMedicationById : function(medication_id)\n           {\n               var d = $q.defer();\n               $http.get('/index.php/getmedicationbyid/'+medication_id)\n                   .success(function(res){\n                       d.resolve(res);\n                   })\n                   .error(function(status){\n                       d.reject(status);\n                   });\n\n               return d.promise;\n           },\n           newMedication : function(appointment_medications)\n           {\n               var d = $q.defer();\n               $http({method:'post', data:{\n                  'newMedications' : appointment_medications\n\n               },\n                   url: \"/index.php/newmedication\"}).success(function (newmedication) {\n                   d.resolve(newmedication);\n               }).error(function(){\n                   d.reject('error');\n               });\n\n               return d.promise;\n           }\n\n       };\n    }]);\n\nangular.module('Platease')\n    .factory('Doctor', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n        return {\n            deleteDoctor : function(doctor_id)\n            {\n                var d = $q.defer();\n                $http.delete('/index.php/deletedoctor/'+doctor_id)\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            getADoctorByIdpassed : function(doctor_id)\n            {\n                var d = $q.defer();\n                $http.get('/index.php/getdoctorbyidpassed/'+doctor_id)\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            getADoctorById : function()\n            {\n                var d = $q.defer();\n                $http.get('/index.php/getdoctorbyid')\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            getAllDoctors : function()\n            {\n                var d = $q.defer();\n                $http.get('/api/doctors')\n                    .success(function(res){\n                        d.resolve(res.data);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            getAllDoctorsUnapproved : function()\n            {\n                var d = $q.defer();\n                $http.get('/index.php/doctorsunapproved')\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            updateDoctor : function(doctor, imagen)\n            {\n                var d = $q.defer();\n                $http({method:'put', data:{\n                    'doctor' : doctor,\n                    'imagen_name' : imagen.name,\n                    'imagen_type' : imagen.type\n                },\n                    url: \"/index.php/updatedoctor\"}).success(function (doctor) {\n                    d.resolve(doctor);\n                }).error(function(){\n                    d.reject('error');\n                });\n\n                return d.promise;\n            },\n            certifyDoctor : function(doctor_id)\n            {\n                var d = $q.defer();\n                $http({method:'put', data:{\n                    'doctor_id' : doctor_id\n                },\n                    url: \"/index.php/certifydoctor\"}).success(function (doctor) {\n                    d.resolve(doctor);\n                }).error(function(){\n                    d.reject('error');\n                });\n\n                return d.promise;\n            }\n\n        };\n    }]);\n\nangular.module('Platease')\n    .factory('Doctor_Especiality', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n        return {\n            getAllDoctorEspecialities : function()\n            {\n                var d = $q.defer();\n                $http.get('/index.php/getalldoctorespecialities')\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            getADoctorEspeciality : function(speciality_id)\n            {\n                var d = $q.defer();\n                $http.get('/index.php/getadoctorbespeciality/'+speciality_id)\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            }\n        };\n    }]);\n\nangular.module('Platease')\n    .factory('Medication_Appointment', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n        return {\n            getAllMedicationsAppointmentByAppointment : function(appointment_id)\n            {\n                var d = $q.defer();\n                $http.get('/index.php/medications_appointment/'+appointment_id)\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            getAllMedicationsAppointmentByPatient : function()\n            {\n                var d = $q.defer();\n                $http.get('/index.php/medicationsbypatient/')\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            getAMedication : function(appoiments_id, medications_id)\n            {\n                var d = $q.defer();\n                $http.get('/index.php/getamedication/'+appoiments_id+'/'+medications_id)\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n                return d.promise;\n            },\n            getAMedicationAppointmentByid : function(medication_id, appointment_id)\n            {\n                var d = $q.defer();\n                $http.get('/index.php/getamedicationappointmentbyid/'+medication_id+'/'+appointment_id)\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n                return d.promise;\n            },\n            deleteAMedication : function(appoiments_id, medications_id)\n            {\n                var d = $q.defer();\n                $http.delete('/index.php/deleteamedication/'+appoiments_id+'/'+medications_id)\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            updateMedication : function(medications_id, medication)\n            {\n                var d = $q.defer();\n                $http({method:'put', data:{\n                    'medications' : medication,\n                    'id_medication' : medications_id\n                },\n                    url: \"/index.php/updatemedication\"}).success(function (medication) {\n                    d.resolve(medication);\n                }).error(function(){\n                    d.reject('error');\n                });\n\n                return d.promise;\n            }\n        };\n    }]);\n\n\nangular.module('Platease')\n    .factory('AppoimentDetails', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n        return{\n            getAllIndicationsByPatient : function(){\n                var d = $q.defer();\n                $http.get('/index.php/appointment_details')\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            },\n            getAIndicationsByPatient : function(appointment_id){\n                var d = $q.defer();\n                $http.get('/index.php/appointment_detailbyidappointment/'+appointment_id)\n                    .success(function(res){\n                        d.resolve(res);\n                    })\n                    .error(function(status){\n                        d.reject(status);\n                    });\n\n                return d.promise;\n            }\n    };\n    }]);\n\n\nangular.module('Platease')\n    .factory('Appointments', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n        return {\n                getAllAppoiments : function()\n                {\n                    var d = $q.defer();\n                    $http.get('/api/appointments')\n                        .success(function(res){\n                            if (res.status == 'success'){\n                                d.resolve(res.appointments);\n                            } else {\n                                d.reject(res);\n                            }\n                        })\n                        .error(function(status){\n                            d.reject(status);\n                        });\n\n                    return d.promise;\n                },\n                getPendingRequests: function()\n                {\n                    var d = $q.defer();\n                    $http.get('/api/appointments/pending')\n                        .success(function(res){\n                            if (res.status == 'success'){\n                                d.resolve(res.data);\n                            } else {\n                                d.reject(res);\n                            }\n                        })\n                        .error(function(status){\n                            d.reject(status);\n                        });\n                    return d.promise;\n                },\n                getAllAppoimentsByAssited : function(assisted, criterial)\n                {\n                    var d = $q.defer();\n                    $http.post('/api/appointments/search', { criteria: criterial, assisted: assisted})\n                        .success(function(res){\n                            if (res.status == 'success'){\n                                d.resolve(res.appointments);\n                            } else {\n                                d.reject(res);\n                            }\n                        })\n                        .error(function(status){\n                            d.reject(status);\n                        });\n\n                    return d.promise;\n                },\n                upsertAppointment: function(appointment_id, date, patient_id){\n                    var d = $q.defer();\n\n                    $http.post('/api/appointment', {date: date, patient: patient_id, id: appointment_id})\n                        .success(function(res){\n                            if (res.status == 'success'){\n                                d.resolve(res);\n                            } else {\n                                d.reject(res);\n                            }\n                        })\n                        .error(function(status){\n                            d.reject(status);\n                        });\n\n                    return d.promise;\n                },\n                removeAppointment: function(appoiment_id)\n                {\n                    var d = $q.defer();\n\n                    $http.post('/api/appointment/delete', {id: appoiment_id})\n                        .success(function(res){\n                            if (res.status == 'success'){\n                                d.resolve(res);\n                            } else {\n                                d.reject(res);\n                            }\n                        })\n                        .error(function(){\n                            d.reject(arguments);\n                        });\n\n                    return d.promise;\n                },\n                getById: function(appointment_id)\n                {\n                    var d = $q.defer();\n\n                    $http.get('/api/appointment/'+appointment_id)\n                        .success(function(res){\n                            if (res.status == 'success'){\n                                d.resolve(res.appointment);\n                            } else {\n                                d.reject(res);\n                            }\n                        })\n                        .error(function(){\n                            d.reject(arguments);\n                        });\n                    return d.promise;\n                },\n                searchAppoiments: function(criteria, assisted){\n                    var d = $q.defer();\n                    $http({method:'post', data:{ 'criteria': criteria, 'assisted': assisted },\n                        url: \"/api/appointments/search\"})\n                        .success(function (data) {\n                            if (data.status == 'success'){\n                                d.resolve(data.appointments);\n                            } else {\n                                d.reject(data);\n                            }\n                        })\n                        .error(function(){\n                            d.reject('error');\n                        });\n                    return d.promise;\n                },\n                approveAppointment: function(appointment_id){\n                    var d = $q.defer();\n\n                    $http.post('/api/appointment/approve', {id: appointment_id})\n                        .success(function(res){\n                            if (res.status == 'success'){\n                                d.resolve(res);\n                            } else {\n                                d.reject(res);\n                            }\n                        })\n                        .error(function(){\n                            d.reject(arguments);\n                        });\n\n                    return d.promise;\n                },\n                doAppointment: function(appointment){\n                    var d = $q.defer();\n                    $http({ method:'put', data:{\n                        'appointment_id': appointment.appointment_id,\n                        'indications': appointment.indications\n                    },\n                        url: \"/index.php/doappointment\"}).success(function (appointment) {\n                        d.resolve(appointment);\n                    }).error(function(){\n                        d.reject('error');\n                    });\n                    return d.promise;\n                }\n            };\n    }]);\n\nangular.module('Platease')\n    .factory('Patients', ['$http', '$timeout', '$q', function($http, $timeout, $q){\n        return{\n                getAllPatients :  function(){\n                    var d = $q.defer();\n                    $http.get('/api/patients').success(function (patients) {\n                        if (patients.status == 'success'){\n                            d.resolve(patients.data);\n                        } else {\n                            dlreject(patients);\n                        }\n\n                    }).error(function(){\n                        d.reject('error');\n                    });\n                    return d.promise;\n                },\n                searchPatient: function(criterial){\n                var d = $q.defer();\n                $http({method:'post', data:{\n                    'criterial': criterial },\n                    url: \"/index.php/searchpatients\"}).success(function (data) {\n                    d.resolve(data);\n                }).error(function(){\n                    d.reject('error');\n                });\n                return d.promise;\n                },\n            selectSinglePatientById: function(id){\n                var d = $q.defer();\n                $http.get('/index.php/getpatientbyid/'+id).success(function (patient) {\n                    d.resolve(patient);\n                }).error(function(){\n                    d.reject('error');\n                });\n                return d.promise;\n            },\n            selectSinglePatient: function(){\n                var d = $q.defer();\n                $http.get('/index.php/getpatient/').success(function (patient) {\n                    d.resolve(patient);\n                }).error(function(){\n                    d.reject('error');\n                });\n                return d.promise;\n            },\n            deletePatient: function(patient_id){\n                var d = $q.defer();\n                $http.delete('/index.php/deletepatient/'+patient_id).success(function (patient) {\n                    d.resolve(patient);\n                }).error(function(){\n                    d.reject('error');\n                });\n                return d.promise;\n            },\n            updatePatient: function(patient_id, patient, imagen){\n                var d = $q.defer();\n                $http({method:'put', data:{\n                    'documentationalue': patient.documentationalue,\n                    'lugar_origen' : patient.lugar_origen,\n                    'patient_id' : patient.patient_id,\n                    'email': patient.email,\n                    'name': patient.name,\n                    'lastname': patient.lastname,\n                    'curp': patient.curp,\n                    'passaport' : patient.passaport,\n                    'idDisp': patient.idDisp,\n                    'cell': patient.cell,\n                    'seguro_medico': patient.seguro_medico,\n                    'sex': patient.sex,\n                    'city': patient.city,\n                    'colony': patient.colony,\n                    'street': patient.street,\n                    'postal_code': patient.postal_code,\n                    'number': patient.number,\n                    'birthday': patient.birthday,\n                    'religion' : patient.religion,\n                    'estado_civil' : patient.estado_civil,\n                    'imagen_name' : imagen.name,\n                    'imagen_type' : imagen.type\n                },\n                    url: '/index.php/updatepatient/'+patient_id}).success(function (updatedpatient) {\n                    d.resolve(updatedpatient);\n                }).error(function(){\n                    d.reject('error');\n                });\n                return d.promise;\n            },\n            insertPatient: function(patient, profile_picture){\n                var d = $q.defer();\n                $http({method:'post', data:{\n                    'profile_picture_name': profile_picture.name,\n                    'profile_picture_type': profile_picture.type,\n                    'patient' : patient\n                     },\n                    url: \"/index.php/insertPatient\"}).success(function (patient) {\n                    d.resolve(patient);\n                }).error(function(){\n                    d.reject('error');\n                });\n                return d.promise;\n            },\n            deleteProfilePicture: function(imagen){\n                var d = $q.defer();\n                $http.delete('/index.php/deleteprofilepicture/'+imagen).success(function () {\n                }).error(function(){\n                    d.reject('error');\n                });\n                return d.promise;\n            },\n            updatePatientProfile : function(patient, imagen)\n            {\n                var d = $q.defer();\n                $http({method:'put', data:{\n                    'patient' : patient,\n                    'imagen_name' : imagen.name,\n                    'imagen_type' : imagen.type\n                },\n                    url: \"/index.php/updatepatientprofile\"}).success(function (patient) {\n                    d.resolve(patient);\n                }).error(function(){\n                    d.reject('error');\n                });\n\n                return d.promise;\n            }\n\n            };\n    }]);\n","angular.module('Platease')\n    .factory('dialog', ['$modal', function($modal){\n\n        var alertModal = function(type, title, message){\n\n            var templateUrl = null;\n\n            switch(type){\n                case 'alert':\n                    templateUrl = '/templates/modal/alertDialog.html';\n                    break;\n                case 'success':\n                    templateUrl = '/templates/modal/successDialog.html';\n                    break;\n                case 'confirm':\n                    templateUrl = '/templates/modal/confirmDialog.html';\n                    break;\n            };\n\n            return $modal.open({\n                    animation: true,\n                    backdrop: 'static',\n                    templateUrl: templateUrl,\n                    windowClass: type,\n                    size: 'md',\n                    resolve:{\n                        alert_title: function() { return title; },\n                        alert_message: function() { return message; }\n                    },\n                    controller: ['$scope', 'alert_title', 'alert_message', function($scope, alert_title, alert_message){\n                        $scope.title = alert_title;\n                        $scope.message = alert_message;\n                    }]\n                }\n            );\n\n        };\n\n        return {\n            alert: function(title, message){\n                return alertModal('alert', title, message).result;\n            },\n            confirm: function(title, message){\n                return alertModal('confirm', title, message).result;\n            },\n            success: function(title, message){\n                return alertModal('success', title, message).result;\n            }\n        }\n    }]);\n"],"sourceRoot":"/source/"}